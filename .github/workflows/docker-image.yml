name: Docker Image CI and Deploy to AWS EB

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# Environment variables

jobs:
  push-image-to-docker-hub-and-EB: # job name
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code or latest repo
        uses: actions/checkout@v3

      #  generating sequential build numbers
      - name: Build Number Generator
        id: buildnumber
        uses: einaregilsson/build-number@v3
        with:
          token: ${{ secrets.github_token }}

      - name: Build the client image
        run: docker build -t hilare/react-test -f ./client/Dockerfile.dev ./client

      - name: Test client
        run: docker run -e CI=true hilare/react-test npm test

      - name: docker login
        env:
          DOCKER_USER: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
        run: |
          echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USER" --password-stdin

      - name: Build docker client
        run: docker build -t hilare/multi-client:v$BUILD_NUMBER ./client

      - name: Build nginx
        run: docker build -t hilare/multi-nginx:v$BUILD_NUMBER ./nginx

      - name: Build server docker image
        run: docker build -t hilare/multi-server:v$BUILD_NUMBER ./server

      - name: Build worker docker image
        run: docker build -t hilare/multi-worker:v$BUILD_NUMBER ./worker

      - name: Push docker images
        run: |
          docker push hilare/multi-client:v$BUILD_NUMBER
          docker push hilare/multi-nginx:v$BUILD_NUMBER
          docker push hilare/multi-server:v$BUILD_NUMBER
          docker push hilare/multi-worker:v$BUILD_NUMBER

      # create a zipped package excluding node_modules, to send Dockerrun.aws.json to beanstalk
      - name: Generete deployment package
        run: zip -r deploy.zip * -x '*node_modules*' '*.git*'

      - name: Deploy to AWS ElasticBeanstalk
        uses: einaregilsson/beanstalk-deploy@v20
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: multi-docker
          environment_name: Multidocker-env
          version_label: multi-docker-app-v${{ steps.buildnumber.outputs.build_number }}
          region: us-east-1
          deployment_package: deploy.zip
